{"version":3,"sources":["App.js","reportWebVitals.js","index.js","monkey.png"],"names":["App","data","React","useMemo","col1","col2","col3","col4","col5","col6","col7","col8","col9","col10","col11","col12","col13","columns","Header","accessor","useTable","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","className","src","logo","alt","url","style","border","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","borderBottom","background","color","fontWeight","render","row","getRowProps","cells","cell","getCellProps","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"oSA4LeA,MAtLf,WAEE,IAAMC,EAAOC,IAAMC,SACjB,iBAAM,CACJ,CACEC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,KAAM,SACNC,MAAO,SACPC,MAAO,SACPC,MAAO,SACPC,MAAO,UAET,CACEZ,KAAM,KACNC,KAAM,MACNC,KAAM,KACNC,KAAM,MACNC,KAAM,KACNC,KAAM,MACNC,KAAM,MACNC,KAAM,MACNC,KAAM,OACNC,MAAO,KACPC,MAAO,KACPC,MAAO,OACPC,MAAO,OAET,CACEZ,KAAM,wBACNC,KAAM,SACNC,KAAM,MACNC,KAAM,MACNC,KAAM,IACNC,KAAM,kBACNC,KAAM,WACNC,KAAM,YACNC,KAAM,OACNC,MAAO,QACPC,MAAO,iBACPC,MAAO,SACPC,MAAO,YAGX,IAGIC,EAAUf,IAAMC,SACpB,iBAAM,CACJ,CACEe,OAAQ,WACRC,SAAU,QAEZ,CACED,OAAQ,WACRC,SAAU,QAEZ,CACED,OAAQ,WACRC,SAAU,QAEZ,CACED,OAAQ,WACRC,SAAU,QAEZ,CACED,OAAQ,WACRC,SAAU,QAEZ,CACED,OAAQ,WACRC,SAAU,QAEZ,CACED,OAAQ,WACRC,SAAU,QAEZ,CACED,OAAQ,WACRC,SAAU,QAEZ,CACED,OAAQ,WACRC,SAAU,QAEZ,CACED,OAAQ,YACRC,SAAU,SAEZ,CACED,OAAQ,YACRC,SAAU,SAEZ,CACED,OAAQ,YACRC,SAAU,SAEZ,CACED,OAAQ,YACRC,SAAU,YAGd,IAGF,EAMIC,mBAAS,CAAEH,UAAShB,SALtBoB,EADF,EACEA,cACAC,EAFF,EAEEA,kBACAC,EAHF,EAGEA,aACAC,EAJF,EAIEA,KACAC,EALF,EAKEA,WAGF,OAGE,yBAAKC,UAAU,OACb,4BAAQA,UAAU,cAChB,yBAAKC,IAAKC,IAAMF,UAAU,WAAWG,IAAI,SACzC,0FAGA,6BACE,kBAAC,IAAD,CACEC,IAAI,iDAGR,2CAAWT,IAAX,CAA4BU,MAAO,CAAEC,OAAQ,oBAC3C,+BACGT,EAAaU,KAAI,SAAAC,GAAW,OAC3B,uBAAQA,EAAYC,sBACjBD,EAAYE,QAAQH,KAAI,SAAAI,GAAM,OAC7B,wCACMA,EAAOC,iBADb,CAEEP,MAAO,CACLQ,aAAc,gBACdC,WAAY,YACZC,MAAO,QACPC,WAAY,UAGbL,EAAOM,OAAO,mBAMzB,0BAAWrB,IACRE,EAAKS,KAAI,SAAAW,GAER,OADAnB,EAAWmB,GAET,uBAAQA,EAAIC,cACTD,EAAIE,MAAMb,KAAI,SAAAc,GACb,OACE,wCACMA,EAAKC,eADX,CAEEjB,MAAO,CACLkB,QAAS,OACTjB,OAAQ,iBACRQ,WAAY,oBAGbO,EAAKJ,OAAO,qBClKtBO,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAShB,OACP,kBAAC,IAAMiB,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SAM1BZ,K,kBChBAa,EAAOC,QAAU,IAA0B,qC","file":"static/js/main.8a6445f7.chunk.js","sourcesContent":["import React from 'react';\nimport logo from './monkey.png';\nimport ReactPlayer from \"react-player\"\nimport { useTable } from \"react-table\"\nimport './App.css';\n\nfunction App() {\n\n  const data = React.useMemo(\n    () => [\n      {\n        col1: '其',\n        col2: '实',\n        col3: '妳',\n        col4: '是',\n        col5: '个',\n        col6: '心',\n        col7: '狠',\n        col8: '又',\n        col9: '手',\n        col10: '辣',\n        col11: '的',\n        col12: '小',\n        col13: '偷'\n      },\n      {\n        col1: 'qi',\n        col2: 'shi',\n        col3: 'ni',\n        col4: 'shi',\n        col5: 'ge',\n        col6: 'xin',\n        col7: 'hen',\n        col8: 'you',\n        col9: 'shou',\n        col10: 'la',\n        col11: 'de',\n        col12: 'xiao',\n        col13: 'tou'\n      },\n      {\n        col1: 'no direct translation',\n        col2: 'honest',\n        col3: 'you',\n        col4: 'are',\n        col5: 'a',\n        col6: 'heart\truthless',\n        col7: 'ruthless',\n        col8: 'and/again',\n        col9: 'hand',\n        col10: 'spicy',\n        col11: '\\'s (possesive)',\n        col12: 'little',\n        col13: 'steal',\n      }\n    ],\n    []\n  )\n\n  const columns = React.useMemo(\n    () => [\n      {\n        Header: 'Column 1',\n        accessor: 'col1', // accessor is the \"key\" in the data\n      },\n      {\n        Header: 'Column 2',\n        accessor: 'col2',\n      },\n      {\n        Header: 'Column 3',\n        accessor: 'col3',\n      },\n      {\n        Header: 'Column 4',\n        accessor: 'col4',\n      },\n      {\n        Header: 'Column 5',\n        accessor: 'col5',\n      },\n      {\n        Header: 'Column 6',\n        accessor: 'col6',\n      },\n      {\n        Header: 'Column 7',\n        accessor: 'col7',\n      },\n      {\n        Header: 'Column 8',\n        accessor: 'col8',\n      },\n      {\n        Header: 'Column 9',\n        accessor: 'col9',\n      },\n      {\n        Header: 'Column 10',\n        accessor: 'col10',\n      },\n      {\n        Header: 'Column 11',\n        accessor: 'col11',\n      },\n      {\n        Header: 'Column 12',\n        accessor: 'col12',\n      },\n      {\n        Header: 'Column 13',\n        accessor: 'col13',\n      },\n    ],\n    []\n  )\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable({ columns, data })\n\n  return (\n\n\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Learn Mandarin from the lyrics of popular songs at karaoke.\n        </p>\n        <div>\n          <ReactPlayer\n            url=\"https://www.youtube.com/watch?v=IFTZtuXKzFs\"\n          />\n        </div>\n        <table {...getTableProps()} style={{ border: 'solid 1px blue' }}>\n          <thead>\n            {headerGroups.map(headerGroup => (\n              <tr {...headerGroup.getHeaderGroupProps()}>\n                {headerGroup.headers.map(column => (\n                  <th\n                    {...column.getHeaderProps()}\n                    style={{\n                      borderBottom: 'solid 3px red',\n                      background: 'aliceblue',\n                      color: 'black',\n                      fontWeight: 'bold',\n                    }}\n                  >\n                    {column.render('Header')}\n                  </th>\n                ))}\n              </tr>\n            ))}\n          </thead>\n          <tbody {...getTableBodyProps()}>\n            {rows.map(row => {\n              prepareRow(row)\n              return (\n                <tr {...row.getRowProps()}>\n                  {row.cells.map(cell => {\n                    return (\n                      <td\n                        {...cell.getCellProps()}\n                        style={{\n                          padding: '10px',\n                          border: 'solid 1px gray',\n                          background: 'CornflowerBlue',\n                        }}\n                      >\n                        {cell.render('Cell')}\n                      </td>\n                    )\n                  })}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/monkey.d8b13f1a.png\";"],"sourceRoot":""}